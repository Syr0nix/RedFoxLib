-- RedFoxUILib - Modern Reloadable UI Library

local RedFoxUILib = {}
local TweenService = game:GetService("TweenService")
local UserInputService = game:GetService("UserInputService")
local CoreGui = game:GetService("CoreGui")
local Lighting = game:GetService("Lighting")

-- Clear existing UI
pcall(function()
	local old = CoreGui:FindFirstChild("RedFoxUI")
	if old then old:Destroy() end
end)

-- Blur Effect
local blur = Instance.new("BlurEffect")
blur.Size = 18
blur.Enabled = true
blur.Parent = Lighting

coroutine.wrap(function()
	task.wait(5)
	TweenService:Create(blur, TweenInfo.new(0.5), {Size = 0}):Play()
	task.wait(0.5)
	blur.Enabled = false
end)()

-- Main UI Setup
local ScreenGui = Instance.new("ScreenGui")
ScreenGui.Name = "RedFoxUI"
ScreenGui.ResetOnSpawn = false
ScreenGui.IgnoreGuiInset = true
ScreenGui.Parent = CoreGui

local MainFrame = Instance.new("Frame")
MainFrame.Size = UDim2.new(0, 720, 0, 480)
MainFrame.Position = UDim2.new(0.5, -360, 0.5, -240)
MainFrame.AnchorPoint = Vector2.new(0.5, 0.5)
MainFrame.BackgroundColor3 = Color3.fromRGB(10, 10, 10)
MainFrame.BorderSizePixel = 0
MainFrame.Parent = ScreenGui
Instance.new("UICorner", MainFrame).CornerRadius = UDim.new(0, 10)

-- Header
local Header = Instance.new("Frame")
Header.Size = UDim2.new(1, 0, 0, 45)
Header.BackgroundColor3 = Color3.fromRGB(15, 15, 15)
Header.BorderSizePixel = 0
Header.Parent = MainFrame

local Title = Instance.new("TextLabel")
Title.Text = "RedFoxUI"
Title.Size = UDim2.new(1, 0, 1, 0)
Title.Position = UDim2.new(0, 10, 0, 0)
Title.Font = Enum.Font.GothamBold
Title.TextSize = 22
Title.TextColor3 = Color3.fromRGB(255, 0, 0)
Title.BackgroundTransparency = 1
Title.TextXAlignment = Enum.TextXAlignment.Left
Title.Parent = Header

-- Tab Bar
local TabBar = Instance.new("ScrollingFrame")
TabBar.Size = UDim2.new(1, 0, 0, 40)
TabBar.Position = UDim2.new(0, 0, 0, 45)
TabBar.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
TabBar.ScrollBarThickness = 4
TabBar.ScrollingDirection = Enum.ScrollingDirection.X
TabBar.AutomaticCanvasSize = Enum.AutomaticSize.X
TabBar.CanvasSize = UDim2.new(0, 0, 0, 0)
TabBar.BorderSizePixel = 0
TabBar.Parent = MainFrame

local TabLayout = Instance.new("UIListLayout")
TabLayout.FillDirection = Enum.FillDirection.Horizontal
TabLayout.SortOrder = Enum.SortOrder.LayoutOrder
TabLayout.Padding = UDim.new(0, 5)
TabLayout.Parent = TabBar

-- Content Area
local ContentFrame = Instance.new("Frame")
ContentFrame.Size = UDim2.new(1, 0, 1, -90)
ContentFrame.Position = UDim2.new(0, 0, 0, 85)
ContentFrame.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
ContentFrame.BorderSizePixel = 0
ContentFrame.ClipsDescendants = true
ContentFrame.Parent = MainFrame

-- Hover effect helper
local function AddHover(obj, base, hover)
	obj.MouseEnter:Connect(function()
		TweenService:Create(obj, TweenInfo.new(0.15), {BackgroundColor3 = hover}):Play()
	end)
	obj.MouseLeave:Connect(function()
		TweenService:Create(obj, TweenInfo.new(0.15), {BackgroundColor3 = base}):Play()
	end)
end

RedFoxUILib.Tabs = {}
RedFoxUILib.CurrentTab = nil

function RedFoxUILib.NewTab(name)
	local tabBtn = Instance.new("TextButton")
	tabBtn.Text = name
	tabBtn.Size = UDim2.new(0, 100, 1, 0)
	tabBtn.Font = Enum.Font.GothamBold
	tabBtn.TextSize = 14
	tabBtn.TextColor3 = Color3.fromRGB(255, 0, 0)
	tabBtn.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
	tabBtn.BorderSizePixel = 0
	Instance.new("UICorner", tabBtn).CornerRadius = UDim.new(0, 6)
	tabBtn.Parent = TabBar
	AddHover(tabBtn, Color3.fromRGB(30, 30, 30), Color3.fromRGB(60, 0, 0))

	local scroll = Instance.new("ScrollingFrame")
	scroll.Name = name
	scroll.Size = UDim2.new(1, 0, 1, 0)
	scroll.BackgroundTransparency = 1
	scroll.BorderSizePixel = 0
	scroll.AutomaticCanvasSize = Enum.AutomaticSize.Y
	scroll.ScrollBarThickness = 6
	scroll.CanvasSize = UDim2.new(0, 0, 0, 0)
	scroll.Visible = false
	scroll.Parent = ContentFrame

	local layout = Instance.new("UIListLayout")
	layout.Padding = UDim.new(0, 6)
	layout.SortOrder = Enum.SortOrder.LayoutOrder
	layout.Parent = scroll

	RedFoxUILib.Tabs[name] = scroll
	tabBtn.MouseButton1Click:Connect(function()
		for _, t in pairs(RedFoxUILib.Tabs) do
			t.Visible = false
		end
		scroll.Visible = true
		RedFoxUILib.CurrentTab = scroll
	end)

	if not RedFoxUILib.CurrentTab then
		scroll.Visible = true
		RedFoxUILib.CurrentTab = scroll
	end

	return scroll
end

-- Component loader
function RedFoxUILib.Load(tab, config)
	for _, item in ipairs(config) do
		if item.type == "button" then
			RedFoxUILib.CreateButton(tab, item.text, item.callback)
		elseif item.type == "toggle" then
			RedFoxUILib.CreateToggle(tab, item.text, item.default or false, item.callback)
		elseif item.type == "slider" then
			RedFoxUILib.CreateSlider(tab, item.text, item.min, item.max, item.default or item.min, item.callback)
		elseif item.type == "textbox" then
			RedFoxUILib.CreateTextbox(tab, item.text, item.default or "", item.callback)
		elseif item.type == "dropdown" then
			RedFoxUILib.CreateDropdown(tab, item.text, item.options or {}, item.callback)
		elseif item.type == "line" then
			RedFoxUILib.CreateLine(tab)
		end
	end
end

return RedFoxUILib
